package boundaryExploitation;
import java.util.ArrayList;
import java.util.Scanner;


public class FindBoundaries {

	public ArrayList<String> getBoundaries(String tree){
		ArrayList<String> bounds = new ArrayList<String>();
		
		Scanner scanner = new Scanner(tree);

		for(int i=0; i<3; i++){
			scanner.nextLine();
		}
		ArrayList<String> theLines = new ArrayList<String>();
		while (scanner.hasNextLine()) {
			theLines.add(scanner.nextLine());
		}
		for(int i=0; i<theLines.size()-2; i++){
			String line = theLines.get(i);
			if(line.contains(": 1")){
				String area = "";
				if(line.contains("|")){
					area += keepProper(line);
					int times = countOc(line);
					for(int j = i-1; j>-1 ; j--){
						String prLine = theLines.get(j);
						int prTimes = countOc(prLine);
						if(prTimes == times-1){
							area += " AND " +keepProper(prLine);
							times = prTimes;
						}
					}
				}else{
					area += keepProper(line)+" ";
				}
				bounds.add(area);
			}
		}
		return fixBoundaries(bounds);
	}
	
	private ArrayList<String> fixBoundaries(ArrayList<String> areas){
		ArrayList<String> bounds = new ArrayList<String>();
		
		for(int i=0; i<areas.size(); i++){
			Scanner s = new Scanner(areas.get(i));
			s.useDelimiter("AND");
			ArrayList<String> boundsInArea = new ArrayList<String>();
			while(s.hasNext()){
				boundsInArea.add(s.next());
			}
			for(int j=0; j<boundsInArea.size(); j++){
				String realBound = boundsInArea.get(j)+ " , ";
				String attr = getAttr(boundsInArea.get(j));
				for(int k=0; k<boundsInArea.size(); k++){
					if(!boundsInArea.get(k).contains(attr)){
						realBound += boundsInArea.get(k) + " AND ";
					}
				}
				realBound = realBound.substring(0, realBound.length()-4);
				bounds.add(realBound);
			}
		}
		return bounds;
	}
	
	
	private String getAttr(String string) {
		Scanner s = new Scanner(string);
		s.useDelimiter(" +");
		return s.next();
	}

	private String keepProper(String line) {
		line = line.replace("|","");
		Scanner s = new Scanner(line);
		s.useDelimiter(" +");
		String attribute = s.next();
		String operator = s.next();
		String value = s.next();
		Scanner sv = new Scanner(value);
		sv.useDelimiter(":");
		value = sv.next();
		String toReturn = " "+attribute+" "+operator+" "+value+" ";
		return toReturn;
	}

	public int countOc(String s){
		int count = 0;
		for(int i =0; i < s.length(); i++)
			if(s.charAt(i) == '|')
				count++;
		return count;
	}
	
}